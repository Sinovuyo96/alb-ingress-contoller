apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog
  labels:
    name: catalog
  namespace: eks-sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalog
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        name: catalog
    spec:
      serviceAccountName: catalog
      securityContext:
        fsGroup: 1000
      containers:
      - name: catalog
        image: "public.ecr.aws/aws-containers/retail-store-sample-catalog:0.4.0"
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        env:
        - name: MYSQL_HOST
          value: catalog-db
        - name: MYSQL_DB
          value: catalog
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: catalog-db
              key: username
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: catalog-db
              key: password
        envFrom:
          - configMapRef:
              name: catalog
        securityContext:
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          successThreshold: 3
          periodSeconds: 5
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: catalog
  labels:
    name: catalog
  namespace: eks-sample-app
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    name: catalog
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalog
  namespace: eks-sample-app
data:
  database: mydatabase  # Database name
